bool dfs(int s,int d,vector<int>&vis,vector<int>v[])
{
    if(s==d)
        return true;
    vis[s]=1;
    for(auto it:v[s])
    { 
        if(vis[it]==0)
        {
            if(dfs(it,d,vis,v))
                return true;
        }
    }
    return false;
}
int bellmonFord(int n, int m, int src, int dest, vector<vector<int>> &edges) {
  vector<int>v[n+1] ;
    for(int i=0;i<edges.size();i++)
    {
        v[edges[i][0]].push_back(edges[i][1]);
    }
vector<int>dis(n+1,1000000000);  
    vector<int>vis(n+1,0);
    if(dfs(src,dest,vis,v)==false)
        return 1000000000;
    dis[src]=0;
    for(int i=1;i<=n-1;i++)
    {
        for(int j=0;j<edges.size();j++)
        {
            if(dis[edges[j][0]]+edges[j][2]<dis[edges[j][1]])
                dis[edges[j][1]]=dis[edges[j][0]]+edges[j][2];
        }
    }
    return dis[dest];
    
    // Write your code here.
}
