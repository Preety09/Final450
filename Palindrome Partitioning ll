#include<bits/stdc++.h>
int t[501][501];
   bool ispalindrome(string& str, int i,int j){
       while(i<j){
           if(str[i]!=str[j]){
               return false;
           }
           i++;
           j--;
       }
       return true;
   }
   
   int solve(string& str, int i, int j){
       if(i>=j){
           return 0;
       }
       if(ispalindrome(str,i,j)==true){
           return 0;
       }
       if(t[i][j]!=-1){
           return t[i][j];
       }
       int mn=INT_MAX;
       for(int k=i;k<j;k++){
           int left,right;
           if(t[i][k]!=-1){
               left = t[i][k];
           }
           else{
               left = solve(str,i,k);

           }
           if(t[k+1][j]!=-1){
               right = t[k+1][j];
           }
           else{
               right = solve(str,k+1,j);

           }
           int temp=1+left+right;
           mn = min(mn,temp);
       }
       return t[i][j]=mn;
   }
int palindromePartitioning(string str) {
    
          int n = str.length();
       memset(t,-1,sizeof(t));
       int ans = solve(str,0,n-1);
       return ans;
    
    // Write your code here
}
