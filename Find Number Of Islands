#include<bits/stdc++.h>
int getTotalIslands(int** arr, int n, int m)
{ 
    
    vector<vector<int>>vis(n,vector<int>(m,0));
    queue<pair<int,int>>q;
    int count=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        { 
            if(arr[i][j]==1 && vis[i][j]==0)
            { 
                q.push({i,j});
                while(!q.empty())
                {
                    int a=q.front().first;
                    int b=q.front().second;
                    q.pop();
                    vis[a][b]=1;
                    if(a-1>=0 && b-1>=0 && arr[a-1][b-1]==1 && vis[a-1][b-1]==0)
                        q.push({a-1,b-1});
                    if(a-1>=0  && arr[a-1][b]==1 && vis[a-1][b]==0)
                        q.push({a-1,b});
                    if(a-1>=0 && b+1<m && arr[a-1][b+1]==1 && vis[a-1][b+1]==0)
                        q.push({a-1,b+1});
                    if(b+1<m && arr[a][b+1]==1 && vis[a][b+1]==0)
                        q.push({a,b+1});
                    if(a+1<n && b+1<m && arr[a+1][b+1]==1 && vis[a+1][b+1]==0)
                        q.push({a+1,b+1});
                    if(a+1<n && arr[a+1][b]==1 && vis[a+1][b]==0)
                        q.push({a+1,b});
                    if(a+1<n && b-1>=0 && arr[a+1][b-1]==1 && vis[a+1][b-1]==0)
                        q.push({a+1,b-1});
                    if( b-1>=0 && arr[a][b-1]==1 && vis[a][b-1]==0)
                        q.push({a,b-1});
                    
                   
                   
                }
                count++;
                
            }
        }
    }
    return count;
   // Write your code here.
}
