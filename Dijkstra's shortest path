
vector<int> dijkstra(vector<vector<int>> &vec, int vertices, int edges, int source) {  
    vector<pair<int,int>>v[vertices];
    for(int i=0;i<vec.size();i++)
    {
        v[vec[i][0]].push_back(make_pair(vec[i][1],vec[i][2]));
        v[vec[i][1]].push_back(make_pair(vec[i][0],vec[i][2]));
    }
   // vector<int>vis(vertices,0);
    vector<int>dis(vertices,INT_MAX);
    dis[source]=0;
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;
    q.push({0,source});
    while(!q.empty())
    {
        int y=q.top().second;
        int wt=q.top().first;
        q.pop();
        for(auto it:v[y])
        {
            if(dis[y]+it.second<dis[it.first])
            {
                dis[it.first]=dis[y]+it.second;
                q.push({dis[it.first],it.first});
            }
        }
    }
    
    return dis;
    // Write your code here.
}
