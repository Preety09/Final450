/************************************************************

    Following is the BinaryTreeNode class structure

    template <typename T>
    class BinaryTreeNode {
       public:
        T val;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
vector<int> getLevelOrder(BinaryTreeNode<int> *root)
{ 
    queue<BinaryTreeNode<int> *>q;
    q.push(root);
    vector<int>v;
    if(root==NULL)
        return v;
    while(!q.empty())
    { 
       
        int n=q.size();
       // cout<<"n= "<<n<<endl;
       // q.pop();
        
        for(int i=0;i<n;i++)
        { 
             BinaryTreeNode<int> *ptr=q.front();
        v.push_back(ptr->val);
            q.pop();
            if(ptr->left!=NULL)
                q.push(ptr->left);
            if(ptr->right!=NULL)
                q.push(ptr->right);
        }
        
    }
    return v;
    //  Write your code here.
}
