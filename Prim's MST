#include<bits/stdc++.h>
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{ 
    vector<pair<pair<int,int>,int>>ans;
    vector<pair<int,int>>v[n+1];
    for(auto it:g)
    {
        
        v[it.first.first].push_back(make_pair(it.first.second,it.second));
        v[it.first.second].push_back(make_pair(it.first.first,it.second));
        
    }
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;
    q.push({0,1});
    vector<int>wt(n+1,INT_MAX);
    vector<int>parent(n+1,-1);
    vector<int>vis(n+1,0);
    wt[1]=0;
    parent[1]=1;
    while(!q.empty())
    {
        int w=q.top().first;
        int u=q.top().second;
        q.pop();
        vis[u]=1;
        for(auto it:v[u])
        {
            
            if(vis[it.first]==0 && wt[it.first]>it.second)
            {
                wt[it.first]=it.second;
                parent[it.first]=u;
                q.push({wt[it.first],it.first});
            }
        }
        
        
    } 
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q1;
    for(int i=2;i<=n;i++)
    {
        
        q1.push({parent[i],i});
        
    }
    while(!q1.empty())
    {
        int y=q1.top().first;
        int z=q1.top().second;
        q1.pop();
        ans.push_back({{y,z},wt[z]});
        
    }
    return ans;
    
    
    // Write your code here.
}
