#include<bits/stdc++.h>
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{ 
    
    unordered_map<int,set<int>>v;
    for(int i=0;i<edges.size();i++)
    { 
        v[edges[i].first].insert(edges[i].second);
        v[edges[i].second].insert(edges[i].first);
    }
    queue<int>q;
    //q.push(0);
    vector<int>vis(vertex,0);
    vector<int>ans;
    for(int i=0;i<vertex;i++)
    {
        if(vis[i]==0)
        {
            vis[i]=1;
            q.push(i);
            while(!q.empty())
            {
                int y=q.front();
                q.pop();
                
                    ans.push_back(y);
                
                
                
                for(auto it:v[y])
                {
                    if(vis[it]==0)
                    {
                        vis[it]=1;
                        q.push(it);
                        
                    }
                }
            }
        }
        
    }
    return ans;
    // Write your code here
}
