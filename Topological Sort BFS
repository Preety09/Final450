//BFS
#include<bits/stdc++.h>
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    vector<int>v2(v,0);
    vector<int>vis[v];
    for(int i=0;i<edges.size();i++)
    {
        v2[edges[i][1]]++;
        vis[edges[i][0]].push_back(edges[i][1]);
        
    }
    
    vector<int>v1;
    queue<int>q;
    for(int i=0;i<v;i++)
    {
        if(v2[i]==0)
            q.push(i);
    }
    while(!q.empty())
    {
        v1.push_back(q.front());
        int y=q.front();
        q.pop();
        for(auto it:vis[y])
        {
            v2[it]--;
            if(v2[it]==0)
                q.push(it);
        }
    }
    //reverse(v1.begin(),v1.end());
    return v1;
    
    
    // Write your code here
}
